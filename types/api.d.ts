/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/institutes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of Institutes resources.
         * @description Retrieves the collection of Institutes resources.
         */
        get: operations["api_institutes_get_collection"];
        put?: never;
        /**
         * Creates a Institutes resource.
         * @description Creates a Institutes resource.
         */
        post: operations["api_institutes_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/institutes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a Institutes resource.
         * @description Retrieves a Institutes resource.
         */
        get: operations["api_institutes_id_get"];
        /**
         * Replaces the Institutes resource.
         * @description Replaces the Institutes resource.
         */
        put: operations["api_institutes_id_put"];
        post?: never;
        /**
         * Removes the Institutes resource.
         * @description Removes the Institutes resource.
         */
        delete: operations["api_institutes_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the Institutes resource.
         * @description Updates the Institutes resource.
         */
        patch: operations["api_institutes_id_patch"];
        trace?: never;
    };
    "/login_check": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Creates a user token.
         * @description Creates a user token.
         */
        post: operations["login_check_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/majors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of Majors resources.
         * @description Retrieves the collection of Majors resources.
         */
        get: operations["api_majors_get_collection"];
        put?: never;
        /**
         * Creates a Majors resource.
         * @description Creates a Majors resource.
         */
        post: operations["api_majors_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/majors/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a Majors resource.
         * @description Retrieves a Majors resource.
         */
        get: operations["api_majors_id_get"];
        /**
         * Replaces the Majors resource.
         * @description Replaces the Majors resource.
         */
        put: operations["api_majors_id_put"];
        post?: never;
        /**
         * Removes the Majors resource.
         * @description Removes the Majors resource.
         */
        delete: operations["api_majors_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the Majors resource.
         * @description Updates the Majors resource.
         */
        patch: operations["api_majors_id_patch"];
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of User resources.
         * @description Retrieves the collection of User resources.
         */
        get: operations["api_users_get_collection"];
        put?: never;
        /**
         * Creates a User resource.
         * @description Creates a User resource.
         */
        post: operations["api_users_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a User resource.
         * @description Retrieves a User resource.
         */
        get: operations["api_users_id_get"];
        /**
         * Replaces the User resource.
         * @description Replaces the User resource.
         */
        put: operations["api_users_id_put"];
        post?: never;
        /**
         * Removes the User resource.
         * @description Removes the User resource.
         */
        delete: operations["api_users_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the User resource.
         * @description Updates the User resource.
         */
        patch: operations["api_users_id_patch"];
        trace?: never;
    };
    "/attendance_modes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of attendance_modes resources.
         * @description Retrieves the collection of attendance_modes resources.
         */
        get: operations["api_attendance_modes_get_collection"];
        put?: never;
        /**
         * Creates a attendance_modes resource.
         * @description Creates a attendance_modes resource.
         */
        post: operations["api_attendance_modes_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/attendance_modes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a attendance_modes resource.
         * @description Retrieves a attendance_modes resource.
         */
        get: operations["api_attendance_modes_id_get"];
        /**
         * Replaces the attendance_modes resource.
         * @description Replaces the attendance_modes resource.
         */
        put: operations["api_attendance_modes_id_put"];
        post?: never;
        /**
         * Removes the attendance_modes resource.
         * @description Removes the attendance_modes resource.
         */
        delete: operations["api_attendance_modes_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the attendance_modes resource.
         * @description Updates the attendance_modes resource.
         */
        patch: operations["api_attendance_modes_id_patch"];
        trace?: never;
    };
    "/class_types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of class_types resources.
         * @description Retrieves the collection of class_types resources.
         */
        get: operations["api_class_types_get_collection"];
        put?: never;
        /**
         * Creates a class_types resource.
         * @description Creates a class_types resource.
         */
        post: operations["api_class_types_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/class_types/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a class_types resource.
         * @description Retrieves a class_types resource.
         */
        get: operations["api_class_types_id_get"];
        /**
         * Replaces the class_types resource.
         * @description Replaces the class_types resource.
         */
        put: operations["api_class_types_id_put"];
        post?: never;
        /**
         * Removes the class_types resource.
         * @description Removes the class_types resource.
         */
        delete: operations["api_class_types_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the class_types resource.
         * @description Updates the class_types resource.
         */
        patch: operations["api_class_types_id_patch"];
        trace?: never;
    };
    "/education_levels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of education_levels resources.
         * @description Retrieves the collection of education_levels resources.
         */
        get: operations["api_education_levels_get_collection"];
        put?: never;
        /**
         * Creates a education_levels resource.
         * @description Creates a education_levels resource.
         */
        post: operations["api_education_levels_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/education_levels/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a education_levels resource.
         * @description Retrieves a education_levels resource.
         */
        get: operations["api_education_levels_id_get"];
        /**
         * Replaces the education_levels resource.
         * @description Replaces the education_levels resource.
         */
        put: operations["api_education_levels_id_put"];
        post?: never;
        /**
         * Removes the education_levels resource.
         * @description Removes the education_levels resource.
         */
        delete: operations["api_education_levels_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the education_levels resource.
         * @description Updates the education_levels resource.
         */
        patch: operations["api_education_levels_id_patch"];
        trace?: never;
    };
    "/positions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of positions resources.
         * @description Retrieves the collection of positions resources.
         */
        get: operations["api_positions_get_collection"];
        put?: never;
        /**
         * Creates a positions resource.
         * @description Creates a positions resource.
         */
        post: operations["api_positions_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/positions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a positions resource.
         * @description Retrieves a positions resource.
         */
        get: operations["api_positions_id_get"];
        /**
         * Replaces the positions resource.
         * @description Replaces the positions resource.
         */
        put: operations["api_positions_id_put"];
        post?: never;
        /**
         * Removes the positions resource.
         * @description Removes the positions resource.
         */
        delete: operations["api_positions_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the positions resource.
         * @description Updates the positions resource.
         */
        patch: operations["api_positions_id_patch"];
        trace?: never;
    };
    "/programs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of programs resources.
         * @description Retrieves the collection of programs resources.
         */
        get: operations["api_programs_get_collection"];
        put?: never;
        /**
         * Creates a programs resource.
         * @description Creates a programs resource.
         */
        post: operations["api_programs_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/programs/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a programs resource.
         * @description Retrieves a programs resource.
         */
        get: operations["api_programs_id_get"];
        /**
         * Replaces the programs resource.
         * @description Replaces the programs resource.
         */
        put: operations["api_programs_id_put"];
        post?: never;
        /**
         * Removes the programs resource.
         * @description Removes the programs resource.
         */
        delete: operations["api_programs_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the programs resource.
         * @description Updates the programs resource.
         */
        patch: operations["api_programs_id_patch"];
        trace?: never;
    };
    "/programs_in_majors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of programs_in_majors resources.
         * @description Retrieves the collection of programs_in_majors resources.
         */
        get: operations["api_programs_in_majors_get_collection"];
        put?: never;
        /**
         * Creates a programs_in_majors resource.
         * @description Creates a programs_in_majors resource.
         */
        post: operations["api_programs_in_majors_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/programs_in_majors/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a programs_in_majors resource.
         * @description Retrieves a programs_in_majors resource.
         */
        get: operations["api_programs_in_majors_id_get"];
        /**
         * Replaces the programs_in_majors resource.
         * @description Replaces the programs_in_majors resource.
         */
        put: operations["api_programs_in_majors_id_put"];
        post?: never;
        /**
         * Removes the programs_in_majors resource.
         * @description Removes the programs_in_majors resource.
         */
        delete: operations["api_programs_in_majors_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the programs_in_majors resource.
         * @description Updates the programs_in_majors resource.
         */
        patch: operations["api_programs_in_majors_id_patch"];
        trace?: never;
    };
    "/subject_groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of subject_groups resources.
         * @description Retrieves the collection of subject_groups resources.
         */
        get: operations["api_subject_groups_get_collection"];
        put?: never;
        /**
         * Creates a subject_groups resource.
         * @description Creates a subject_groups resource.
         */
        post: operations["api_subject_groups_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/subject_groups/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a subject_groups resource.
         * @description Retrieves a subject_groups resource.
         */
        get: operations["api_subject_groups_id_get"];
        /**
         * Replaces the subject_groups resource.
         * @description Replaces the subject_groups resource.
         */
        put: operations["api_subject_groups_id_put"];
        post?: never;
        /**
         * Removes the subject_groups resource.
         * @description Removes the subject_groups resource.
         */
        delete: operations["api_subject_groups_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the subject_groups resource.
         * @description Updates the subject_groups resource.
         */
        patch: operations["api_subject_groups_id_patch"];
        trace?: never;
    };
    "/subject_hours": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of subject_hours resources.
         * @description Retrieves the collection of subject_hours resources.
         */
        get: operations["api_subject_hours_get_collection"];
        put?: never;
        /**
         * Creates a subject_hours resource.
         * @description Creates a subject_hours resource.
         */
        post: operations["api_subject_hours_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/subject_hours/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a subject_hours resource.
         * @description Retrieves a subject_hours resource.
         */
        get: operations["api_subject_hours_id_get"];
        /**
         * Replaces the subject_hours resource.
         * @description Replaces the subject_hours resource.
         */
        put: operations["api_subject_hours_id_put"];
        post?: never;
        /**
         * Removes the subject_hours resource.
         * @description Removes the subject_hours resource.
         */
        delete: operations["api_subject_hours_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the subject_hours resource.
         * @description Updates the subject_hours resource.
         */
        patch: operations["api_subject_hours_id_patch"];
        trace?: never;
    };
    "/subject_lecturers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of subject_lecturers resources.
         * @description Retrieves the collection of subject_lecturers resources.
         */
        get: operations["api_subject_lecturers_get_collection"];
        put?: never;
        /**
         * Creates a subject_lecturers resource.
         * @description Creates a subject_lecturers resource.
         */
        post: operations["api_subject_lecturers_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/subject_lecturers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a subject_lecturers resource.
         * @description Retrieves a subject_lecturers resource.
         */
        get: operations["api_subject_lecturers_id_get"];
        /**
         * Replaces the subject_lecturers resource.
         * @description Replaces the subject_lecturers resource.
         */
        put: operations["api_subject_lecturers_id_put"];
        post?: never;
        /**
         * Removes the subject_lecturers resource.
         * @description Removes the subject_lecturers resource.
         */
        delete: operations["api_subject_lecturers_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the subject_lecturers resource.
         * @description Updates the subject_lecturers resource.
         */
        patch: operations["api_subject_lecturers_id_patch"];
        trace?: never;
    };
    "/subjects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of subjects resources.
         * @description Retrieves the collection of subjects resources.
         */
        get: operations["api_subjects_get_collection"];
        put?: never;
        /**
         * Creates a subjects resource.
         * @description Creates a subjects resource.
         */
        post: operations["api_subjects_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/subjects/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a subjects resource.
         * @description Retrieves a subjects resource.
         */
        get: operations["api_subjects_id_get"];
        /**
         * Replaces the subjects resource.
         * @description Replaces the subjects resource.
         */
        put: operations["api_subjects_id_put"];
        post?: never;
        /**
         * Removes the subjects resource.
         * @description Removes the subjects resource.
         */
        delete: operations["api_subjects_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the subjects resource.
         * @description Updates the subjects resource.
         */
        patch: operations["api_subjects_id_patch"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        "Institutes-institutes.write": {
            name: string;
            abbreviation: string;
        };
        "Institutes-majors.read_institutes.read": {
            readonly id?: number;
            name: string;
            abbreviation: string;
        };
        "Institutes-majors.read_majors.item.read_institutes.read": {
            readonly id?: number;
            name: string;
            abbreviation: string;
        };
        "Institutes-user.read_institutes.read_positions.read": {
            readonly id?: number;
            name: string;
            abbreviation: string;
        };
        "Institutes-user.read_institutes.read_user.item.read_positions.read": {
            readonly id?: number;
            name: string;
            abbreviation: string;
        };
        "Institutes.jsonld-institutes.write": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            name: string;
            abbreviation: string;
        };
        "Institutes.jsonld-majors.read_institutes.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name: string;
            abbreviation: string;
        };
        "Institutes.jsonld-majors.read_majors.item.read_institutes.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name: string;
            abbreviation: string;
        };
        "Institutes.jsonld-user.read_institutes.read_positions.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name: string;
            abbreviation: string;
        };
        "Institutes.jsonld-user.read_institutes.read_user.item.read_positions.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name: string;
            abbreviation: string;
        };
        "Majors-majors.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "Majors-majors.read_institutes.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            institute?: components["schemas"]["Institutes-majors.read_institutes.read"] | null;
        };
        "Majors-majors.read_majors.item.read_institutes.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            programsInMajors?: string[];
            institute?: components["schemas"]["Institutes-majors.read_majors.item.read_institutes.read"] | null;
        };
        "Majors-majors.write": {
            name?: string;
            abbreviation?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "Majors-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "Majors-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "Majors.jsonld-majors.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "Majors.jsonld-majors.read_institutes.read": {
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            institute?: components["schemas"]["Institutes.jsonld-majors.read_institutes.read"] | null;
        };
        "Majors.jsonld-majors.read_majors.item.read_institutes.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            programsInMajors?: string[];
            institute?: components["schemas"]["Institutes.jsonld-majors.read_majors.item.read_institutes.read"] | null;
        };
        "Majors.jsonld-majors.write": {
            name?: string;
            abbreviation?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "Majors.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "Majors.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "User-user.edit": {
            email?: string;
            /** @description The user roles */
            roles?: string[];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            position?: string | null;
            first_name?: string;
            last_name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "User-user.read": {
            readonly id?: number;
            email?: string;
            /** @description The user roles */
            roles?: string[];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            position?: string | null;
            first_name?: string;
            last_name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
            subjectLecturers?: string[];
            readonly hoursUsed?: number;
        };
        "User-user.read_institutes.read_positions.read": {
            readonly id?: number;
            email?: string;
            /** @description The user roles */
            roles?: string[];
            position?: components["schemas"]["positions-user.read_institutes.read_positions.read"] | null;
            first_name?: string;
            last_name?: string;
            institute?: components["schemas"]["Institutes-user.read_institutes.read_positions.read"] | null;
            subjectLecturers?: string[];
            readonly hoursUsed?: number;
        };
        "User-user.read_institutes.read_user.item.read_positions.read": {
            readonly id?: number;
            email?: string;
            /** @description The user roles */
            roles?: string[];
            position?: components["schemas"]["positions-user.read_institutes.read_user.item.read_positions.read"] | null;
            first_name?: string;
            last_name?: string;
            institute?: components["schemas"]["Institutes-user.read_institutes.read_user.item.read_positions.read"] | null;
            subjectLecturers?: string[];
            readonly hoursUsed?: number;
        };
        "User-user.write": {
            email?: string;
            /** @description The user roles */
            roles?: string[];
            /** @description The hashed password */
            password?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            position?: string | null;
            first_name?: string;
            last_name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "User.jsonld-user.edit": {
            email?: string;
            /** @description The user roles */
            roles?: string[];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            position?: string | null;
            first_name?: string;
            last_name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "User.jsonld-user.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            email?: string;
            /** @description The user roles */
            roles?: string[];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            position?: string | null;
            first_name?: string;
            last_name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
            subjectLecturers?: string[];
            readonly hoursUsed?: number;
        };
        "User.jsonld-user.read_institutes.read_positions.read": {
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            email?: string;
            /** @description The user roles */
            roles?: string[];
            position?: components["schemas"]["positions.jsonld-user.read_institutes.read_positions.read"] | null;
            first_name?: string;
            last_name?: string;
            institute?: components["schemas"]["Institutes.jsonld-user.read_institutes.read_positions.read"] | null;
            subjectLecturers?: string[];
            readonly hoursUsed?: number;
        };
        "User.jsonld-user.read_institutes.read_user.item.read_positions.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            email?: string;
            /** @description The user roles */
            roles?: string[];
            position?: components["schemas"]["positions.jsonld-user.read_institutes.read_user.item.read_positions.read"] | null;
            first_name?: string;
            last_name?: string;
            institute?: components["schemas"]["Institutes.jsonld-user.read_institutes.read_user.item.read_positions.read"] | null;
            subjectLecturers?: string[];
            readonly hoursUsed?: number;
        };
        "User.jsonld-user.write": {
            email?: string;
            /** @description The user roles */
            roles?: string[];
            /** @description The hashed password */
            password?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            position?: string | null;
            first_name?: string;
            last_name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            institute?: string | null;
        };
        "attendance_modes-attendance_modes.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "attendance_modes-attendance_modes.read_attendance_modes.item.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            programsInMajors?: components["schemas"]["programs_in_majors-attendance_modes.read_attendance_modes.item.read"][];
        };
        "attendance_modes-attendance_modes.write": {
            name?: string;
            abbreviation?: string;
        };
        "attendance_modes-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "attendance_modes-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "attendance_modes.jsonld-attendance_modes.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "attendance_modes.jsonld-attendance_modes.read_attendance_modes.item.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            programsInMajors?: components["schemas"]["programs_in_majors.jsonld-attendance_modes.read_attendance_modes.item.read"][];
        };
        "attendance_modes.jsonld-attendance_modes.write": {
            name?: string;
            abbreviation?: string;
        };
        "attendance_modes.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "attendance_modes.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "class_types-class_types.read": {
            readonly id?: number;
            type: string;
            abbreviation?: string;
            subjectHours?: string[];
            subjectGroups?: string[];
            subjectLecturers?: string[];
        };
        "class_types-class_types.write": {
            type: string;
            abbreviation?: string;
        };
        "class_types-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read": {
            readonly id?: number;
            type: string;
            abbreviation?: string;
            subjectHours?: components["schemas"]["subject_hours-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
            subjectGroups?: components["schemas"]["subject_groups-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
            subjectLecturers?: components["schemas"]["subject_lecturers-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
        };
        "class_types.jsonld-class_types.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            type: string;
            abbreviation?: string;
            subjectHours?: string[];
            subjectGroups?: string[];
            subjectLecturers?: string[];
        };
        "class_types.jsonld-class_types.write": {
            type: string;
            abbreviation?: string;
        };
        "class_types.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            type: string;
            abbreviation?: string;
            subjectHours?: components["schemas"]["subject_hours.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
            subjectGroups?: components["schemas"]["subject_groups.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
            subjectLecturers?: components["schemas"]["subject_lecturers.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
        };
        "education_levels-education_levels.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "education_levels-education_levels.read_education_levels.item.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            programsInMajors?: components["schemas"]["programs_in_majors-education_levels.read_education_levels.item.read"][];
        };
        "education_levels-education_levels.write": {
            name?: string;
            abbreviation?: string;
        };
        "education_levels-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "education_levels-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read": {
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "education_levels.jsonld-education_levels.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "education_levels.jsonld-education_levels.read_education_levels.item.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
            programsInMajors?: components["schemas"]["programs_in_majors.jsonld-education_levels.read_education_levels.item.read"][];
        };
        "education_levels.jsonld-education_levels.write": {
            name?: string;
            abbreviation?: string;
        };
        "education_levels.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "education_levels.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            abbreviation?: string;
        };
        "positions-positions.read": {
            readonly id?: number;
            description?: string;
            abbreviation?: string;
            title?: string;
            pensum?: number | null;
        };
        "positions-positions.write": {
            description?: string;
            abbreviation?: string;
            title?: string;
            pensum?: number | null;
        };
        "positions-user.read_institutes.read_positions.read": {
            readonly id?: number;
            description?: string;
            abbreviation?: string;
            title?: string;
            pensum?: number | null;
        };
        "positions-user.read_institutes.read_user.item.read_positions.read": {
            readonly id?: number;
            description?: string;
            abbreviation?: string;
            title?: string;
            pensum?: number | null;
        };
        "positions.jsonld-positions.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            description?: string;
            abbreviation?: string;
            title?: string;
            pensum?: number | null;
        };
        "positions.jsonld-positions.write": {
            description?: string;
            abbreviation?: string;
            title?: string;
            pensum?: number | null;
        };
        "positions.jsonld-user.read_institutes.read_positions.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            description?: string;
            abbreviation?: string;
            title?: string;
            pensum?: number | null;
        };
        "positions.jsonld-user.read_institutes.read_user.item.read_positions.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            description?: string;
            abbreviation?: string;
            title?: string;
            pensum?: number | null;
        };
        "programs-programs.read": {
            readonly id?: number;
            planYear?: number;
            semester?: number;
            syllabusYear?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            programInMajors?: string;
            subject?: string[];
        };
        "programs-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read": {
            readonly id?: number;
            planYear?: number;
            semester?: number;
            syllabusYear?: number;
            programInMajors?: components["schemas"]["programs_in_majors-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"];
            subject?: string[];
        };
        "programs-programs.write": {
            planYear?: number;
            semester?: number;
            syllabusYear?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            programInMajors?: string;
            subject?: string[];
        };
        "programs-programs_in_majors.read": {
            programInMajors?: components["schemas"]["programs_in_majors-programs_in_majors.read"];
        };
        "programs-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read": {
            programInMajors?: components["schemas"]["programs_in_majors-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"];
        };
        "programs.jsonld-programs.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            planYear?: number;
            semester?: number;
            syllabusYear?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            programInMajors?: string;
            subject?: string[];
        };
        "programs.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read": {
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly id?: number;
            planYear?: number;
            semester?: number;
            syllabusYear?: number;
            programInMajors?: components["schemas"]["programs_in_majors.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"];
            subject?: string[];
        };
        "programs.jsonld-programs.write": {
            planYear?: number;
            semester?: number;
            syllabusYear?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            programInMajors?: string;
            subject?: string[];
        };
        "programs.jsonld-programs_in_majors.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            programInMajors?: components["schemas"]["programs_in_majors.jsonld-programs_in_majors.read"];
        };
        "programs.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            programInMajors?: components["schemas"]["programs_in_majors.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"];
        };
        "programs_in_majors-attendance_modes.read_attendance_modes.item.read": {
            attendanceMode?: components["schemas"]["attendance_modes-attendance_modes.read_attendance_modes.item.read"] | null;
        };
        "programs_in_majors-education_levels.read_education_levels.item.read": {
            educationLevel?: components["schemas"]["education_levels-education_levels.read_education_levels.item.read"] | null;
        };
        "programs_in_majors-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read": {
            readonly id?: number;
            major?: components["schemas"]["Majors-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"] | null;
            educationLevel?: components["schemas"]["education_levels-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"] | null;
            attendanceMode?: components["schemas"]["attendance_modes-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"] | null;
            programs?: components["schemas"]["programs-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"][];
        };
        "programs_in_majors-programs_in_majors.read": {
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            major?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            educationLevel?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            attendanceMode?: string | null;
            programs?: components["schemas"]["programs-programs_in_majors.read"][];
        };
        "programs_in_majors-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read": {
            readonly id?: number;
            major?: components["schemas"]["Majors-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"] | null;
            educationLevel?: components["schemas"]["education_levels-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"] | null;
            attendanceMode?: components["schemas"]["attendance_modes-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"] | null;
            programs?: components["schemas"]["programs-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"][];
        };
        "programs_in_majors-programs_in_majors.write": {
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            major?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            educationLevel?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            attendanceMode?: string | null;
            programs?: string[];
        };
        "programs_in_majors.jsonld-attendance_modes.read_attendance_modes.item.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            attendanceMode?: components["schemas"]["attendance_modes.jsonld-attendance_modes.read_attendance_modes.item.read"] | null;
        };
        "programs_in_majors.jsonld-education_levels.read_education_levels.item.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            educationLevel?: components["schemas"]["education_levels.jsonld-education_levels.read_education_levels.item.read"] | null;
        };
        "programs_in_majors.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            major?: components["schemas"]["Majors.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"] | null;
            educationLevel?: components["schemas"]["education_levels.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"] | null;
            attendanceMode?: components["schemas"]["attendance_modes.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"] | null;
            programs?: components["schemas"]["programs.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"][];
        };
        "programs_in_majors.jsonld-programs_in_majors.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            major?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            educationLevel?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            attendanceMode?: string | null;
            programs?: components["schemas"]["programs.jsonld-programs_in_majors.read"][];
        };
        "programs_in_majors.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read": {
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly id?: number;
            major?: components["schemas"]["Majors.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"] | null;
            educationLevel?: components["schemas"]["education_levels.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"] | null;
            attendanceMode?: components["schemas"]["attendance_modes.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"] | null;
            programs?: components["schemas"]["programs.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"][];
        };
        "programs_in_majors.jsonld-programs_in_majors.write": {
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            major?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            educationLevel?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            attendanceMode?: string | null;
            programs?: string[];
        };
        "subject_groups-subject_groups.read": {
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            amount?: number;
        };
        "subject_groups-subject_groups.write": {
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            amount?: number;
        };
        "subject_groups-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read": {
            readonly id?: number;
            subject?: components["schemas"]["subjects-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
            classType?: components["schemas"]["class_types-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
            amount?: number;
        };
        "subject_groups-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read": {
            readonly id?: number;
            subject?: components["schemas"]["subjects-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            amount?: number;
        };
        "subject_groups-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write": {
            readonly id?: number;
            subject?: components["schemas"]["subjects-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write"];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            amount?: number;
        };
        "subject_groups.jsonld-subject_groups.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            amount?: number;
        };
        "subject_groups.jsonld-subject_groups.write": {
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            amount?: number;
        };
        "subject_groups.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            subject?: components["schemas"]["subjects.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
            classType?: components["schemas"]["class_types.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
            amount?: number;
        };
        "subject_groups.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            subject?: components["schemas"]["subjects.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            amount?: number;
        };
        "subject_hours-subject_hours.read": {
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            hoursRequired?: number;
        };
        "subject_hours-subject_hours.write": {
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            hoursRequired?: number;
        };
        "subject_hours-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read": {
            readonly id?: number;
            subject?: components["schemas"]["subjects-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"] | null;
            classType?: components["schemas"]["class_types-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
            hoursRequired?: number;
        };
        "subject_hours-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read": {
            readonly id?: number;
            subject?: components["schemas"]["subjects-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"] | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            hoursRequired?: number;
        };
        "subject_hours-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write": {
            readonly id?: number;
            subject?: components["schemas"]["subjects-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write"] | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            hoursRequired?: number;
        };
        "subject_hours.jsonld-subject_hours.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            hoursRequired?: number;
        };
        "subject_hours.jsonld-subject_hours.write": {
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            hoursRequired?: number;
        };
        "subject_hours.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            subject?: components["schemas"]["subjects.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"] | null;
            classType?: components["schemas"]["class_types.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
            hoursRequired?: number;
        };
        "subject_hours.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            subject?: components["schemas"]["subjects.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"] | null;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            hoursRequired?: number;
        };
        "subject_lecturers-subject_lecturers.read": {
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            user?: string;
            subjectHours?: number;
        };
        "subject_lecturers-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read": {
            readonly id?: number;
            subject?: components["schemas"]["subjects-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
            classType?: components["schemas"]["class_types-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            user?: string;
            subjectHours?: number;
        };
        "subject_lecturers-subject_lecturers.write": {
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            user?: string;
            subjectHours?: number;
        };
        "subject_lecturers-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read": {
            readonly id?: number;
            subject?: components["schemas"]["subjects-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            user?: string;
            subjectHours?: number;
        };
        "subject_lecturers-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write": {
            readonly id?: number;
            subject?: components["schemas"]["subjects-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write"];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            user?: string;
            subjectHours?: number;
        };
        "subject_lecturers.jsonld-subject_lecturers.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            user?: string;
            subjectHours?: number;
        };
        "subject_lecturers.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read": {
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly id?: number;
            subject?: components["schemas"]["subjects.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
            classType?: components["schemas"]["class_types.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            user?: string;
            subjectHours?: number;
        };
        "subject_lecturers.jsonld-subject_lecturers.write": {
            readonly id?: number;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            subject?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            user?: string;
            subjectHours?: number;
        };
        "subject_lecturers.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            subject?: components["schemas"]["subjects.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"];
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            classType?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            user?: string;
            subjectHours?: number;
        };
        "subjects-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read": {
            readonly id?: number;
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
            subjectHours?: components["schemas"]["subject_hours-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
            subjectGroups?: components["schemas"]["subject_groups-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
            subjectLecturers?: components["schemas"]["subject_lecturers-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
        };
        "subjects-subjects.create": {
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
        };
        "subjects-subjects.read": {
            readonly id?: number;
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
            subjectHours?: string[];
            subjectGroups?: string[];
            subjectLecturers?: string[];
        };
        "subjects-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read": {
            readonly id?: number;
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
            subjectHours?: components["schemas"]["subject_hours-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"][];
            subjectGroups?: components["schemas"]["subject_groups-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"][];
            subjectLecturers?: components["schemas"]["subject_lecturers-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"][];
        };
        "subjects-subjects.write": {
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
            subjectHours?: string[];
            subjectGroups?: string[];
            subjectLecturers?: string[];
        };
        "subjects-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write": {
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
            subjectHours?: components["schemas"]["subject_hours-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write"][];
            subjectGroups?: components["schemas"]["subject_groups-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write"][];
            subjectLecturers?: components["schemas"]["subject_lecturers-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write"][];
        };
        "subjects.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
            subjectHours?: components["schemas"]["subject_hours.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
            subjectGroups?: components["schemas"]["subject_groups.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
            subjectLecturers?: components["schemas"]["subject_lecturers.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
        };
        "subjects.jsonld-subjects.create": {
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
        };
        "subjects.jsonld-subjects.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
            subjectHours?: string[];
            subjectGroups?: string[];
            subjectLecturers?: string[];
        };
        "subjects.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
            subjectHours?: components["schemas"]["subject_hours.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"][];
            subjectGroups?: components["schemas"]["subject_groups.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"][];
            subjectLecturers?: components["schemas"]["subject_lecturers.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"][];
        };
        "subjects.jsonld-subjects.write": {
            name?: string;
            /**
             * Format: iri-reference
             * @example https://example.com/
             */
            program?: string | null;
            subjectHours?: string[];
            subjectGroups?: string[];
            subjectLecturers?: string[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    api_institutes_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Institutes collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["Institutes.jsonld-institutes.write"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["Institutes-institutes.write"][];
                    "text/html": components["schemas"]["Institutes-institutes.write"][];
                };
            };
        };
    };
    api_institutes_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new Institutes resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["Institutes.jsonld-institutes.write"];
                "application/json": components["schemas"]["Institutes-institutes.write"];
                "text/html": components["schemas"]["Institutes-institutes.write"];
            };
        };
        responses: {
            /** @description Institutes resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Institutes.jsonld-institutes.write"];
                    "application/json": components["schemas"]["Institutes-institutes.write"];
                    "text/html": components["schemas"]["Institutes-institutes.write"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_institutes_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Institutes identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Institutes resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Institutes.jsonld-institutes.write"];
                    "application/json": components["schemas"]["Institutes-institutes.write"];
                    "text/html": components["schemas"]["Institutes-institutes.write"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_institutes_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Institutes identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated Institutes resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["Institutes.jsonld-institutes.write"];
                "application/json": components["schemas"]["Institutes-institutes.write"];
                "text/html": components["schemas"]["Institutes-institutes.write"];
            };
        };
        responses: {
            /** @description Institutes resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Institutes.jsonld-institutes.write"];
                    "application/json": components["schemas"]["Institutes-institutes.write"];
                    "text/html": components["schemas"]["Institutes-institutes.write"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_institutes_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Institutes identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Institutes resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_institutes_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Institutes identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated Institutes resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["Institutes-institutes.write"];
            };
        };
        responses: {
            /** @description Institutes resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Institutes.jsonld-institutes.write"];
                    "application/json": components["schemas"]["Institutes-institutes.write"];
                    "text/html": components["schemas"]["Institutes-institutes.write"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    login_check_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The login data */
        requestBody: {
            content: {
                "application/json": {
                    email: string;
                    password: string;
                };
            };
        };
        responses: {
            /** @description User token created */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        readonly token: string;
                    };
                };
            };
        };
    };
    api_majors_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Majors collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["Majors.jsonld-majors.read_institutes.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["Majors-majors.read_institutes.read"][];
                    "text/html": components["schemas"]["Majors-majors.read_institutes.read"][];
                };
            };
        };
    };
    api_majors_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new Majors resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["Majors.jsonld-majors.write"];
                "application/json": components["schemas"]["Majors-majors.write"];
                "text/html": components["schemas"]["Majors-majors.write"];
            };
        };
        responses: {
            /** @description Majors resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Majors.jsonld-majors.read"];
                    "application/json": components["schemas"]["Majors-majors.read"];
                    "text/html": components["schemas"]["Majors-majors.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_majors_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Majors identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Majors resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Majors.jsonld-majors.read_majors.item.read_institutes.read"];
                    "application/json": components["schemas"]["Majors-majors.read_majors.item.read_institutes.read"];
                    "text/html": components["schemas"]["Majors-majors.read_majors.item.read_institutes.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_majors_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Majors identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated Majors resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["Majors.jsonld-majors.write"];
                "application/json": components["schemas"]["Majors-majors.write"];
                "text/html": components["schemas"]["Majors-majors.write"];
            };
        };
        responses: {
            /** @description Majors resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Majors.jsonld-majors.read"];
                    "application/json": components["schemas"]["Majors-majors.read"];
                    "text/html": components["schemas"]["Majors-majors.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_majors_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Majors identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Majors resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_majors_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Majors identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated Majors resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["Majors-majors.write"];
            };
        };
        responses: {
            /** @description Majors resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Majors.jsonld-majors.read"];
                    "application/json": components["schemas"]["Majors-majors.read"];
                    "text/html": components["schemas"]["Majors-majors.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
                "exists[position.pensum]"?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["User.jsonld-user.read_institutes.read_positions.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["User-user.read_institutes.read_positions.read"][];
                    "text/html": components["schemas"]["User-user.read_institutes.read_positions.read"][];
                };
            };
        };
    };
    api_users_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new User resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["User.jsonld-user.write"];
                "application/json": components["schemas"]["User-user.write"];
                "text/html": components["schemas"]["User-user.write"];
            };
        };
        responses: {
            /** @description User resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["User.jsonld-user.read"];
                    "application/json": components["schemas"]["User-user.read"];
                    "text/html": components["schemas"]["User-user.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["User.jsonld-user.read_institutes.read_user.item.read_positions.read"];
                    "application/json": components["schemas"]["User-user.read_institutes.read_user.item.read_positions.read"];
                    "text/html": components["schemas"]["User-user.read_institutes.read_user.item.read_positions.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated User resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["User.jsonld-user.edit"];
                "application/json": components["schemas"]["User-user.edit"];
                "text/html": components["schemas"]["User-user.edit"];
            };
        };
        responses: {
            /** @description User resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["User.jsonld-user.read"];
                    "application/json": components["schemas"]["User-user.read"];
                    "text/html": components["schemas"]["User-user.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated User resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["User-user.edit"];
            };
        };
        responses: {
            /** @description User resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["User.jsonld-user.read"];
                    "application/json": components["schemas"]["User-user.read"];
                    "text/html": components["schemas"]["User-user.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_attendance_modes_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description attendance_modes collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["attendance_modes.jsonld-attendance_modes.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["attendance_modes-attendance_modes.read"][];
                    "text/html": components["schemas"]["attendance_modes-attendance_modes.read"][];
                };
            };
        };
    };
    api_attendance_modes_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new attendance_modes resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["attendance_modes.jsonld-attendance_modes.write"];
                "application/json": components["schemas"]["attendance_modes-attendance_modes.write"];
                "text/html": components["schemas"]["attendance_modes-attendance_modes.write"];
            };
        };
        responses: {
            /** @description attendance_modes resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["attendance_modes.jsonld-attendance_modes.read"];
                    "application/json": components["schemas"]["attendance_modes-attendance_modes.read"];
                    "text/html": components["schemas"]["attendance_modes-attendance_modes.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_attendance_modes_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description attendance_modes identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description attendance_modes resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["attendance_modes.jsonld-attendance_modes.read_attendance_modes.item.read"];
                    "application/json": components["schemas"]["attendance_modes-attendance_modes.read_attendance_modes.item.read"];
                    "text/html": components["schemas"]["attendance_modes-attendance_modes.read_attendance_modes.item.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_attendance_modes_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description attendance_modes identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated attendance_modes resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["attendance_modes.jsonld-attendance_modes.write"];
                "application/json": components["schemas"]["attendance_modes-attendance_modes.write"];
                "text/html": components["schemas"]["attendance_modes-attendance_modes.write"];
            };
        };
        responses: {
            /** @description attendance_modes resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["attendance_modes.jsonld-attendance_modes.read"];
                    "application/json": components["schemas"]["attendance_modes-attendance_modes.read"];
                    "text/html": components["schemas"]["attendance_modes-attendance_modes.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_attendance_modes_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description attendance_modes identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description attendance_modes resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_attendance_modes_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description attendance_modes identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated attendance_modes resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["attendance_modes-attendance_modes.write"];
            };
        };
        responses: {
            /** @description attendance_modes resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["attendance_modes.jsonld-attendance_modes.read"];
                    "application/json": components["schemas"]["attendance_modes-attendance_modes.read"];
                    "text/html": components["schemas"]["attendance_modes-attendance_modes.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_class_types_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description class_types collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["class_types.jsonld-class_types.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["class_types-class_types.read"][];
                    "text/html": components["schemas"]["class_types-class_types.read"][];
                };
            };
        };
    };
    api_class_types_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new class_types resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["class_types.jsonld-class_types.write"];
                "application/json": components["schemas"]["class_types-class_types.write"];
                "text/html": components["schemas"]["class_types-class_types.write"];
            };
        };
        responses: {
            /** @description class_types resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["class_types.jsonld-class_types.read"];
                    "application/json": components["schemas"]["class_types-class_types.read"];
                    "text/html": components["schemas"]["class_types-class_types.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_class_types_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description class_types identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description class_types resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["class_types.jsonld-class_types.read"];
                    "application/json": components["schemas"]["class_types-class_types.read"];
                    "text/html": components["schemas"]["class_types-class_types.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_class_types_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description class_types identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated class_types resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["class_types.jsonld-class_types.write"];
                "application/json": components["schemas"]["class_types-class_types.write"];
                "text/html": components["schemas"]["class_types-class_types.write"];
            };
        };
        responses: {
            /** @description class_types resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["class_types.jsonld-class_types.read"];
                    "application/json": components["schemas"]["class_types-class_types.read"];
                    "text/html": components["schemas"]["class_types-class_types.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_class_types_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description class_types identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description class_types resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_class_types_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description class_types identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated class_types resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["class_types-class_types.write"];
            };
        };
        responses: {
            /** @description class_types resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["class_types.jsonld-class_types.read"];
                    "application/json": components["schemas"]["class_types-class_types.read"];
                    "text/html": components["schemas"]["class_types-class_types.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_education_levels_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description education_levels collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["education_levels.jsonld-education_levels.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["education_levels-education_levels.read"][];
                    "text/html": components["schemas"]["education_levels-education_levels.read"][];
                };
            };
        };
    };
    api_education_levels_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new education_levels resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["education_levels.jsonld-education_levels.write"];
                "application/json": components["schemas"]["education_levels-education_levels.write"];
                "text/html": components["schemas"]["education_levels-education_levels.write"];
            };
        };
        responses: {
            /** @description education_levels resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["education_levels.jsonld-education_levels.read"];
                    "application/json": components["schemas"]["education_levels-education_levels.read"];
                    "text/html": components["schemas"]["education_levels-education_levels.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_education_levels_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description education_levels identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description education_levels resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["education_levels.jsonld-education_levels.read_education_levels.item.read"];
                    "application/json": components["schemas"]["education_levels-education_levels.read_education_levels.item.read"];
                    "text/html": components["schemas"]["education_levels-education_levels.read_education_levels.item.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_education_levels_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description education_levels identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated education_levels resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["education_levels.jsonld-education_levels.write"];
                "application/json": components["schemas"]["education_levels-education_levels.write"];
                "text/html": components["schemas"]["education_levels-education_levels.write"];
            };
        };
        responses: {
            /** @description education_levels resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["education_levels.jsonld-education_levels.read"];
                    "application/json": components["schemas"]["education_levels-education_levels.read"];
                    "text/html": components["schemas"]["education_levels-education_levels.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_education_levels_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description education_levels identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description education_levels resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_education_levels_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description education_levels identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated education_levels resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["education_levels-education_levels.write"];
            };
        };
        responses: {
            /** @description education_levels resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["education_levels.jsonld-education_levels.read"];
                    "application/json": components["schemas"]["education_levels-education_levels.read"];
                    "text/html": components["schemas"]["education_levels-education_levels.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_positions_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description positions collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["positions.jsonld-positions.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["positions-positions.read"][];
                    "text/html": components["schemas"]["positions-positions.read"][];
                };
            };
        };
    };
    api_positions_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new positions resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["positions.jsonld-positions.write"];
                "application/json": components["schemas"]["positions-positions.write"];
                "text/html": components["schemas"]["positions-positions.write"];
            };
        };
        responses: {
            /** @description positions resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["positions.jsonld-positions.read"];
                    "application/json": components["schemas"]["positions-positions.read"];
                    "text/html": components["schemas"]["positions-positions.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_positions_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description positions identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description positions resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["positions.jsonld-positions.read"];
                    "application/json": components["schemas"]["positions-positions.read"];
                    "text/html": components["schemas"]["positions-positions.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_positions_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description positions identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated positions resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["positions.jsonld-positions.write"];
                "application/json": components["schemas"]["positions-positions.write"];
                "text/html": components["schemas"]["positions-positions.write"];
            };
        };
        responses: {
            /** @description positions resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["positions.jsonld-positions.read"];
                    "application/json": components["schemas"]["positions-positions.read"];
                    "text/html": components["schemas"]["positions-positions.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_positions_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description positions identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description positions resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_positions_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description positions identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated positions resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["positions-positions.write"];
            };
        };
        responses: {
            /** @description positions resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["positions.jsonld-positions.read"];
                    "application/json": components["schemas"]["positions-positions.read"];
                    "text/html": components["schemas"]["positions-positions.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_programs_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
                "programInMajors.id"?: number;
                "programInMajors.id[]"?: number[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description programs collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["programs.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["programs-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"][];
                    "text/html": components["schemas"]["programs-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"][];
                };
            };
        };
    };
    api_programs_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new programs resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["programs.jsonld-programs.write"];
                "application/json": components["schemas"]["programs-programs.write"];
                "text/html": components["schemas"]["programs-programs.write"];
            };
        };
        responses: {
            /** @description programs resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["programs.jsonld-programs.read"];
                    "application/json": components["schemas"]["programs-programs.read"];
                    "text/html": components["schemas"]["programs-programs.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_programs_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description programs identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description programs resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["programs.jsonld-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"];
                    "application/json": components["schemas"]["programs-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"];
                    "text/html": components["schemas"]["programs-programs.read_programs_in_majors.read_majors.read_education_levels.read_attendance_modes.read_subjects_in_programs.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_programs_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description programs identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated programs resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["programs.jsonld-programs.write"];
                "application/json": components["schemas"]["programs-programs.write"];
                "text/html": components["schemas"]["programs-programs.write"];
            };
        };
        responses: {
            /** @description programs resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["programs.jsonld-programs.read"];
                    "application/json": components["schemas"]["programs-programs.read"];
                    "text/html": components["schemas"]["programs-programs.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_programs_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description programs identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description programs resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_programs_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description programs identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated programs resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["programs-programs.write"];
            };
        };
        responses: {
            /** @description programs resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["programs.jsonld-programs.read"];
                    "application/json": components["schemas"]["programs-programs.read"];
                    "text/html": components["schemas"]["programs-programs.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_programs_in_majors_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
                "major.id"?: number;
                "major.id[]"?: number[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description programs_in_majors collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["programs_in_majors.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["programs_in_majors-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"][];
                    "text/html": components["schemas"]["programs_in_majors-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"][];
                };
            };
        };
    };
    api_programs_in_majors_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new programs_in_majors resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["programs_in_majors.jsonld-programs_in_majors.write"];
                "application/json": components["schemas"]["programs_in_majors-programs_in_majors.write"];
                "text/html": components["schemas"]["programs_in_majors-programs_in_majors.write"];
            };
        };
        responses: {
            /** @description programs_in_majors resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["programs_in_majors.jsonld-programs_in_majors.read"];
                    "application/json": components["schemas"]["programs_in_majors-programs_in_majors.read"];
                    "text/html": components["schemas"]["programs_in_majors-programs_in_majors.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_programs_in_majors_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description programs_in_majors identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description programs_in_majors resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["programs_in_majors.jsonld-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"];
                    "application/json": components["schemas"]["programs_in_majors-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"];
                    "text/html": components["schemas"]["programs_in_majors-programs_in_majors.read_majors.read_attendance_modes.read_education_levels.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_programs_in_majors_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description programs_in_majors identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated programs_in_majors resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["programs_in_majors.jsonld-programs_in_majors.write"];
                "application/json": components["schemas"]["programs_in_majors-programs_in_majors.write"];
                "text/html": components["schemas"]["programs_in_majors-programs_in_majors.write"];
            };
        };
        responses: {
            /** @description programs_in_majors resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["programs_in_majors.jsonld-programs_in_majors.read"];
                    "application/json": components["schemas"]["programs_in_majors-programs_in_majors.read"];
                    "text/html": components["schemas"]["programs_in_majors-programs_in_majors.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_programs_in_majors_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description programs_in_majors identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description programs_in_majors resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_programs_in_majors_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description programs_in_majors identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated programs_in_majors resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["programs_in_majors-programs_in_majors.write"];
            };
        };
        responses: {
            /** @description programs_in_majors resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["programs_in_majors.jsonld-programs_in_majors.read"];
                    "application/json": components["schemas"]["programs_in_majors-programs_in_majors.read"];
                    "text/html": components["schemas"]["programs_in_majors-programs_in_majors.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_groups_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subject_groups collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["subject_groups.jsonld-subject_groups.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["subject_groups-subject_groups.read"][];
                    "text/html": components["schemas"]["subject_groups-subject_groups.read"][];
                };
            };
        };
    };
    api_subject_groups_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new subject_groups resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["subject_groups.jsonld-subject_groups.write"];
                "application/json": components["schemas"]["subject_groups-subject_groups.write"];
                "text/html": components["schemas"]["subject_groups-subject_groups.write"];
            };
        };
        responses: {
            /** @description subject_groups resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_groups.jsonld-subject_groups.read"];
                    "application/json": components["schemas"]["subject_groups-subject_groups.read"];
                    "text/html": components["schemas"]["subject_groups-subject_groups.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_groups_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_groups identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subject_groups resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_groups.jsonld-subject_groups.read"];
                    "application/json": components["schemas"]["subject_groups-subject_groups.read"];
                    "text/html": components["schemas"]["subject_groups-subject_groups.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_groups_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_groups identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated subject_groups resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["subject_groups.jsonld-subject_groups.write"];
                "application/json": components["schemas"]["subject_groups-subject_groups.write"];
                "text/html": components["schemas"]["subject_groups-subject_groups.write"];
            };
        };
        responses: {
            /** @description subject_groups resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_groups.jsonld-subject_groups.read"];
                    "application/json": components["schemas"]["subject_groups-subject_groups.read"];
                    "text/html": components["schemas"]["subject_groups-subject_groups.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_groups_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_groups identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subject_groups resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_groups_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_groups identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated subject_groups resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["subject_groups-subject_groups.write"];
            };
        };
        responses: {
            /** @description subject_groups resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_groups.jsonld-subject_groups.read"];
                    "application/json": components["schemas"]["subject_groups-subject_groups.read"];
                    "text/html": components["schemas"]["subject_groups-subject_groups.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_hours_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subject_hours collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["subject_hours.jsonld-subject_hours.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["subject_hours-subject_hours.read"][];
                    "text/html": components["schemas"]["subject_hours-subject_hours.read"][];
                };
            };
        };
    };
    api_subject_hours_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new subject_hours resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["subject_hours.jsonld-subject_hours.write"];
                "application/json": components["schemas"]["subject_hours-subject_hours.write"];
                "text/html": components["schemas"]["subject_hours-subject_hours.write"];
            };
        };
        responses: {
            /** @description subject_hours resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_hours.jsonld-subject_hours.read"];
                    "application/json": components["schemas"]["subject_hours-subject_hours.read"];
                    "text/html": components["schemas"]["subject_hours-subject_hours.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_hours_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_hours identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subject_hours resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_hours.jsonld-subject_hours.read"];
                    "application/json": components["schemas"]["subject_hours-subject_hours.read"];
                    "text/html": components["schemas"]["subject_hours-subject_hours.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_hours_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_hours identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated subject_hours resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["subject_hours.jsonld-subject_hours.write"];
                "application/json": components["schemas"]["subject_hours-subject_hours.write"];
                "text/html": components["schemas"]["subject_hours-subject_hours.write"];
            };
        };
        responses: {
            /** @description subject_hours resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_hours.jsonld-subject_hours.read"];
                    "application/json": components["schemas"]["subject_hours-subject_hours.read"];
                    "text/html": components["schemas"]["subject_hours-subject_hours.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_hours_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_hours identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subject_hours resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_hours_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_hours identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated subject_hours resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["subject_hours-subject_hours.write"];
            };
        };
        responses: {
            /** @description subject_hours resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_hours.jsonld-subject_hours.read"];
                    "application/json": components["schemas"]["subject_hours-subject_hours.read"];
                    "text/html": components["schemas"]["subject_hours-subject_hours.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_lecturers_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
                "user.id"?: number;
                "user.id[]"?: number[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subject_lecturers collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["subject_lecturers.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["subject_lecturers-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
                    "text/html": components["schemas"]["subject_lecturers-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"][];
                };
            };
        };
    };
    api_subject_lecturers_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new subject_lecturers resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["subject_lecturers.jsonld-subject_lecturers.write"];
                "application/json": components["schemas"]["subject_lecturers-subject_lecturers.write"];
                "text/html": components["schemas"]["subject_lecturers-subject_lecturers.write"];
            };
        };
        responses: {
            /** @description subject_lecturers resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_lecturers.jsonld-subject_lecturers.read"];
                    "application/json": components["schemas"]["subject_lecturers-subject_lecturers.read"];
                    "text/html": components["schemas"]["subject_lecturers-subject_lecturers.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_lecturers_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_lecturers identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subject_lecturers resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_lecturers.jsonld-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
                    "application/json": components["schemas"]["subject_lecturers-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
                    "text/html": components["schemas"]["subject_lecturers-subject_lecturers.read_class_types.read_subject_groups.read_subject_hours.read_subjects.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_lecturers_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_lecturers identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated subject_lecturers resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["subject_lecturers.jsonld-subject_lecturers.write"];
                "application/json": components["schemas"]["subject_lecturers-subject_lecturers.write"];
                "text/html": components["schemas"]["subject_lecturers-subject_lecturers.write"];
            };
        };
        responses: {
            /** @description subject_lecturers resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_lecturers.jsonld-subject_lecturers.read"];
                    "application/json": components["schemas"]["subject_lecturers-subject_lecturers.read"];
                    "text/html": components["schemas"]["subject_lecturers-subject_lecturers.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_lecturers_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_lecturers identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subject_lecturers resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subject_lecturers_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subject_lecturers identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated subject_lecturers resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["subject_lecturers-subject_lecturers.write"];
            };
        };
        responses: {
            /** @description subject_lecturers resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subject_lecturers.jsonld-subject_lecturers.read"];
                    "application/json": components["schemas"]["subject_lecturers-subject_lecturers.read"];
                    "text/html": components["schemas"]["subject_lecturers-subject_lecturers.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subjects_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subjects collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["subjects.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "application/json": components["schemas"]["subjects-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"][];
                    "text/html": components["schemas"]["subjects-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"][];
                };
            };
        };
    };
    api_subjects_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new subjects resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["subjects.jsonld-subjects.create"];
                "application/json": components["schemas"]["subjects-subjects.create"];
                "text/html": components["schemas"]["subjects-subjects.create"];
            };
        };
        responses: {
            /** @description subjects resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subjects.jsonld-subjects.read"];
                    "application/json": components["schemas"]["subjects-subjects.read"];
                    "text/html": components["schemas"]["subjects-subjects.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subjects_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subjects identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subjects resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subjects.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"];
                    "application/json": components["schemas"]["subjects-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"];
                    "text/html": components["schemas"]["subjects-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subjects_id_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subjects identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated subjects resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["subjects.jsonld-subjects.write"];
                "application/json": components["schemas"]["subjects-subjects.write"];
                "text/html": components["schemas"]["subjects-subjects.write"];
            };
        };
        responses: {
            /** @description subjects resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subjects.jsonld-subjects.read"];
                    "application/json": components["schemas"]["subjects-subjects.read"];
                    "text/html": components["schemas"]["subjects-subjects.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subjects_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subjects identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description subjects resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_subjects_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description subjects identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated subjects resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["subjects-subjects.write_subject_groups.write_subject_hours.write_subject_lecturers.write"];
            };
        };
        responses: {
            /** @description subjects resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["subjects.jsonld-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"];
                    "application/json": components["schemas"]["subjects-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"];
                    "text/html": components["schemas"]["subjects-subjects.read_subject_groups.read_subject_hours.read_subject_lecturers.read"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
